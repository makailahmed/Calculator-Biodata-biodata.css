<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator with Voice Command</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f4f4f4;
            margin: 0;
            font-family: Arial, sans-serif;
        }
        .calculator {
            width: 100%;
            max-width: 350px;
            background: #fff;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        }
        .display {
            width: 100%;
            height: 50px;
            font-size: 1.5em;
            text-align: right;
            padding: 10px;
            border: none;
            background: #eee;
            border-radius: 5px;
            margin-bottom: 10px;
        }
        .buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }
        button {
            padding: 20px;
            font-size: 1.2em;
            border: none;
            cursor: pointer;
            background: #ddd;
            border-radius: 5px;
            transition: background 0.3s ease;
        }
        button:hover {
            background: #ccc;
        }
        button.operator {
            background: #f39c12;
            color: white;
        }
        button.operator:hover {
            background: #e67e22;
        }
        button.equal {
            background: #2ecc71;
            color: white;
            grid-column: span 2;
        }
        button.equal:hover {
            background: #27ae60;
        }
        button.clear {
            background: #e74c3c;
            color: white;
        }
        button.clear:hover {
            background: #c0392b;
        }
        @media (max-width: 400px) {
            button {
                padding: 15px;
                font-size: 1em;
            }
        }
    </style>
</head>
<body>
    <div class="calculator">
        <input type="text" class="display" id="display" disabled>
        <div class="buttons">
            <button class="clear" onclick="clearDisplay()">C</button>
            <button onclick="appendToDisplay('sin(')">sin</button>
            <button onclick="appendToDisplay('cos(')">cos</button>
            <button onclick="appendToDisplay('tan(')">tan</button>
            <button onclick="appendToDisplay('(')">(</button>
            <button onclick="appendToDisplay(')')">)</button>
            <button onclick="appendToDisplay('sqrt(')">âˆš</button>
            <button onclick="appendToDisplay('log(')">log</button>
            <button onclick="appendToDisplay('7')">7</button>
            <button onclick="appendToDisplay('8')">8</button>
            <button onclick="appendToDisplay('9')">9</button>
            <button class="operator" onclick="appendToDisplay('+')">+</button>
            <button onclick="appendToDisplay('4')">4</button>
            <button onclick="appendToDisplay('5')">5</button>
            <button onclick="appendToDisplay('6')">6</button>
            <button class="operator" onclick="appendToDisplay('-')">-</button>
            <button onclick="appendToDisplay('1')">1</button>
            <button onclick="appendToDisplay('2')">2</button>
            <button onclick="appendToDisplay('3')">3</button>
            <button class="operator" onclick="appendToDisplay('*')">*</button>
            <button onclick="appendToDisplay('0')">0</button>
            <button onclick="appendToDisplay('.')">.</button>
            <button class="equal" onclick="calculateResult()">=</button>
            <button class="operator" onclick="appendToDisplay('/')">/</button>
        </div>
        <button onclick="startVoiceRecognition()">Start Voice</button>
    </div>
    
    <script>
        // Function to append value to display
        function appendToDisplay(value) {
            document.getElementById('display').value += value;
        }
        
        // Function to clear the display
        function clearDisplay() {
            document.getElementById('display').value = '';
        }

        // Function to calculate the result
        function calculateResult() {
            try {
                let expression = document.getElementById('display').value;

                // Convert degrees to radians for trigonometric functions
                expression = expression.replace(/sin\(([^)]+)\)/g, 'Math.sin($1 * Math.PI / 180)');
                expression = expression.replace(/cos\(([^)]+)\)/g, 'Math.cos($1 * Math.PI / 180)');
                expression = expression.replace(/tan\(([^)]+)\)/g, 'Math.tan($1 * Math.PI / 180)');

                // Replace sqrt and log functions
                expression = expression.replace(/sqrt\(/g, 'Math.sqrt(');
                expression = expression.replace(/log\(/g, 'Math.log(');

                // Evaluate and display result
                document.getElementById('display').value = eval(expression);
            } catch (e) {
                document.getElementById('display').value = 'Error';
                setTimeout(clearDisplay, 1500); // Clear after 1.5 seconds
            }
        }

        // Start Voice Recognition
        function startVoiceRecognition() {
            const recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
            recognition.lang = 'en-US';
            recognition.continuous = false;
            recognition.interimResults = false;

            recognition.onstart = function () {
                console.log('Voice recognition started...');
            };

            recognition.onerror = function (event) {
                console.error('Speech recognition error', event);
            };

            recognition.onresult = function (event) {
                const spokenText = event.results[0][0].transcript;
                console.log('You said: ', spokenText);

                // Parse spoken text to append correct digits and operators
                const operators = ['+', '-', '*', '/', 'plus', 'minus', 'times', 'divided by'];
                let parsedExpression = spokenText.toLowerCase();

                // Replace word operators with symbols
                operators.forEach(operator => {
                    if (parsedExpression.includes(operator)) {
                        if (operator === 'plus') parsedExpression = parsedExpression.replace(operator, '+');
                        if (operator === 'minus') parsedExpression = parsedExpression.replace(operator, '-');
                        if (operator === 'times') parsedExpression = parsedExpression.replace(operator, '*');
                        if (operator === 'divided by') parsedExpression = parsedExpression.replace(operator, '/');
                    }
                });

                // Append the parsed expression to the display
                appendToDisplay(parsedExpression);
            };

            recognition.start();
        }
    </script>
</body>
</html>
